name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    # 手动触发

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  MacOS:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        #arch: [x64]
        arch: [arm64, x64]
        #arch: [arm64]
    steps:
      - name: "Release Build Type"
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "BUILD_TYPE=Release" >> $GITHUB_ENV
      - name: "Debug Build Type"
        if: startsWith(github.ref, 'refs/tags/') != true
        run: echo "BUILD_TYPE=Debug" >> $GITHUB_ENV

      - uses: actions/checkout@v3
      - name: 'Run CMake'
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          cmakeBuildType: ${{ env.BUILD_TYPE }}  
          buildDirectory: "${{ github.workspace }}/build"
          buildWithCMake: true
          cmakeAppendedArgs: -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/build/install"
          buildWithCMakeArgs: --config ${{ env.BUILD_TYPE }}
          
      - name: 'Run CTest'
        run: ctest -C ${{ env.BUILD_TYPE }}
        working-directory: "${{ github.workspace }}/build"

      - name: "Check file existence"
        uses: andstor/file-existence-action@v1
        with:
          allow_failure: true
          files: "${{ github.workspace }}/build/src/libsimple.dylib, ${{ github.workspace }}/build/test/dict/jieba.dict.utf8"
      # npm run
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: run node example
        working-directory: ./examples/node/
        run: |
          npm install
          npm run p -- --ext_path="${{ github.workspace }}/build/src/" --dict_path="${{ github.workspace }}/build/test/dict/"
          # don't run this as it's toooo slow
          # npm run b -- --ext_path="${{ github.workspace }}/build/src/" --dict_path="${{ github.workspace }}/build/test/dict/"

      # python run
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - name: run python example
        working-directory: ./examples/python3/
        run: python db_connector.py "${{ github.workspace }}/build/src/libsimple"

      - name: Package
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          mkdir libsimple-darwin-${{ matrix.arch}}
          sudo xattr -r -d com.apple.quarantine src/libsimple.dylib
          cp -r src/libsimple.dylib test/dict libsimple-darwin-${{ matrix.arch}}/
          zip -r libsimple-darwin-${{ matrix.arch}}.zip libsimple-darwin-${{ matrix.arch}}
        working-directory: "${{ github.workspace }}/build"

      - name: upload artifacts macos
        uses: actions/upload-artifact@v3
        with:
          name: libsimple-darwin-${{ matrix.arch }}
          path: ${{ github.workspace }}/build/src/libsimple.dylib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

